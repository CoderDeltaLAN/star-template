name: build

on:
  push:
    branches: [ main, "ci/**" ]
  pull_request:
  workflow_dispatch:

jobs:
  node:
    name: Node (Lint/Type/Test)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install deps
        run: npm ci --silent

      - name: Prettier check
        run: npx prettier -c . --ignore-unknown

      - name: ESLint
        run: npx eslint . --max-warnings=0

      - name: Type-check
        if: ${{ hashFiles('tsconfig.json') != '' }}
        run: npx tsc -p tsconfig.json --noEmit

      - name: Tests
        run: |
          if jq -re '.scripts.test' package.json >/dev/null 2>&1; then
            npm test --silent
          else
            echo "No Node tests"
          fi

  python:
    name: Python (Linux, ${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11","3.12"]
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Upgrade pip + Poetry
        run: |
          python -m pip install -U pip
          pip install "poetry==1.8.3"

      - name: Install deps (Poetry)
        run: poetry install --no-interaction

      - name: Ruff
        run: poetry run ruff check .

      - name: Black check
        run: poetry run black --check .

      - name: Pytests
        env:
          PYTHONPATH: src
        run: poetry run pytest -q --disable-warnings

      - name: Mypy (src)
        run: poetry run mypy src

      - name: Smoke import
        run: poetry run python -c "import star_template; print('py-smoke-ok')"
