name: CI
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: {}
permissions: { contents: read }
concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  python-linux:
    name: Python (Linux, ${{ matrix.python-version }})
    if: ${{ github.event_name != 'pull_request' || (github.event.pull_request && !github.event.pull_request.draft) }}
    runs-on: ubuntu-latest
    strategy: { fail-fast: false, matrix: { python-version: [ "3.11", "3.12" ] } }
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: ${{ matrix.python-version }} }
      - run: python -m pip install --upgrade pip && pip install "poetry==1.8.3"
      - run: poetry install --no-interaction
      - run: poetry run ruff check . --output-format=github
      - run: poetry run black --check .
      - run: PYTHONPATH=src poetry run pytest -q --disable-warnings
      - run: poetry run mypy .

  node-linux:
    name: Node (Linux)
    if: ${{ github.event_name != 'pull_request' || (github.event.pull_request && !github.event.pull_request.draft) }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 20, cache: npm }
      - run: npm ci
      - run: npx eslint . --max-warnings=0
      - run: npx prettier -c . --ignore-unknown
      - name: Type-check
        run: if [ -f tsconfig.json ]; then npx tsc -p tsconfig.json --noEmit; else echo "No TS"; fi
      - name: Tests
        run: if jq -e '.scripts.test' package.json >/dev/null 2>&1; then npm test; else echo "No Node tests"; fi
