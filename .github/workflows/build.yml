name: CI

on:
  push:
    branches: [ main, "feat/**", "fix/**", "ci/**", "docs/**", "chore/**" ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: {}

permissions:
  contents: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

# Evita acceder a campos inexistentes fuera de PR
env:

jobs:
  python-linux:
    name: Python (Linux, ${{ matrix.python-version }})
      if: ${{ github.event_name != 'pull_request' || !github.event.pull_request.draft }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.11", "3.12" ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install "poetry==1.8.3"
          poetry --version
      - name: Install deps
        run: poetry install --no-interaction
      - name: Ruff
        run: poetry run ruff check . --output-format=github
      - name: Black
        run: poetry run black --check .
      - name: Pytest
        run: PYTHONPATH=src poetry run pytest -q --disable-warnings
      - name: Mypy
        run: poetry run mypy .

  node-linux:
    name: Node (Linux)
      if: ${{ github.event_name != 'pull_request' || !github.event.pull_request.draft }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - name: Install deps
        run: npm ci
      - name: ESLint
        run: npx eslint . --max-warnings=0
      - name: Prettier
        run: npx prettier -c . --ignore-unknown
      - name: Type-check
        run: |
          if [ -f tsconfig.json ]; then
            npx tsc -p tsconfig.json --noEmit
          else
            echo "Sin TypeScript"
          fi
      - name: Tests
        run: |
          if jq -e '.scripts.test' package.json >/dev/null 2>&1; then
            npm test
          else
            echo "Sin tests Node"
          fi

  python-windows:
    name: Python (Windows opcional)
      if: ${{ github.event_name != 'pull_request' || !github.event.pull_request.draft }}
    runs-on: windows-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install "poetry==1.8.3"
          poetry --version
      - name: Install deps
        run: poetry install --no-interaction
      - name: Pytest
        run: PYTHONPATH=src poetry run pytest -q --disable-warnings
